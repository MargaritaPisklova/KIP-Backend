// <auto-generated />
using System;
using KIP_server_GET.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace KIP_server_GET.Migrations
{
    [DbContext(typeof(ServerContext))]
    partial class ServerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

            modelBuilder.Entity("KIP_server_GET.Models.Audience", b =>
                {
                    b.Property<int>("AudienceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("AudienceName")
                        .IsRequired()
                        .HasColumnType("varchar(7)");

                    b.Property<int>("BuildingID")
                        .HasColumnType("integer");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("integer");

                    b.HasKey("AudienceID");

                    b.HasIndex("BuildingID");

                    b.ToTable("Audience");

                    b.HasData(
                        new
                        {
                            AudienceID = 1534,
                            AudienceName = "307А",
                            BuildingID = 7,
                            NumberOfSeats = 30
                        },
                        new
                        {
                            AudienceID = 1510,
                            AudienceName = "1003",
                            BuildingID = 3,
                            NumberOfSeats = 10
                        },
                        new
                        {
                            AudienceID = 1684,
                            AudienceName = "21",
                            BuildingID = 13,
                            NumberOfSeats = 15
                        });
                });

            modelBuilder.Entity("KIP_server_GET.Models.Auth", b =>
                {
                    b.Property<int>("AuthID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("StudentID")
                        .HasColumnType("integer");

                    b.HasKey("AuthID");

                    b.HasIndex("StudentID");

                    b.ToTable("Auth");

                    b.HasData(
                        new
                        {
                            AuthID = 123,
                            Email = "andrey24@gmail.com",
                            Password = "qwerty1245Aw",
                            StudentID = 18065
                        },
                        new
                        {
                            AuthID = 321,
                            Email = "alexeypavlov@gmail.com",
                            Password = "652REF84FGd",
                            StudentID = 17985
                        },
                        new
                        {
                            AuthID = 213,
                            Email = "mrnoizy1@gmail.com",
                            Password = "iamNOIZY",
                            StudentID = 18112
                        });
                });

            modelBuilder.Entity("KIP_server_GET.Models.Building", b =>
                {
                    b.Property<int>("BuildingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("BuildingName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("BuildingShortName")
                        .HasColumnType("varchar(5)");

                    b.HasKey("BuildingID");

                    b.ToTable("Building");

                    b.HasData(
                        new
                        {
                            BuildingID = 7,
                            BuildingName = "Адміністративно-господарський корпус",
                            BuildingShortName = "АК"
                        },
                        new
                        {
                            BuildingID = 3,
                            BuildingName = "Учбовий корпус 2",
                            BuildingShortName = "У2"
                        },
                        new
                        {
                            BuildingID = 13,
                            BuildingName = "Учбовий корпус 5",
                            BuildingShortName = "У5"
                        });
                });

            modelBuilder.Entity("KIP_server_GET.Models.Cathedra", b =>
                {
                    b.Property<int>("CathedraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("CathedraName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CathedraShortName")
                        .HasColumnType("varchar(7)");

                    b.Property<int>("FacultyID")
                        .HasColumnType("integer");

                    b.HasKey("CathedraID");

                    b.HasIndex("FacultyID");

                    b.ToTable("Cathedra");

                    b.HasData(
                        new
                        {
                            CathedraID = 194,
                            CathedraName = "Інформатика та інтелектуальна власність",
                            CathedraShortName = "ІІВ",
                            FacultyID = 21
                        },
                        new
                        {
                            CathedraID = 31,
                            CathedraName = "Системний аналіз та інформаційно-аналітичні технології",
                            CathedraShortName = "САІТ",
                            FacultyID = 20
                        },
                        new
                        {
                            CathedraID = 76,
                            CathedraName = "Інтелектуальні комп’ютерні системи",
                            CathedraShortName = "ІКС",
                            FacultyID = 42
                        });
                });

            modelBuilder.Entity("KIP_server_GET.Models.Faculty", b =>
                {
                    b.Property<int>("FacultyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FacultyShortName")
                        .HasColumnType("varchar(7)");

                    b.HasKey("FacultyID");

                    b.ToTable("Faculty");

                    b.HasData(
                        new
                        {
                            FacultyID = 21,
                            FacultyName = "Комп`ютерних наук і програмної інженерії",
                            FacultyShortName = "КН"
                        },
                        new
                        {
                            FacultyID = 20,
                            FacultyName = "Соціально-гуманітарних технологій",
                            FacultyShortName = "СГТ"
                        },
                        new
                        {
                            FacultyID = 42,
                            FacultyName = "Комп`ютерних та інформаційних технологій",
                            FacultyShortName = "КІТ"
                        });
                });

            modelBuilder.Entity("KIP_server_GET.Models.Group", b =>
                {
                    b.Property<int>("GroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int>("Course")
                        .HasColumnType("integer");

                    b.Property<int>("FacultyID")
                        .HasColumnType("integer");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("GroupID");

                    b.HasIndex("FacultyID");

                    b.ToTable("Group");

                    b.HasData(
                        new
                        {
                            GroupID = 12619,
                            Course = 1,
                            FacultyID = 42,
                            GroupName = "КІТ-120д"
                        },
                        new
                        {
                            GroupID = 12194,
                            Course = 2,
                            FacultyID = 20,
                            GroupName = "СГТ-319б"
                        },
                        new
                        {
                            GroupID = 11167,
                            Course = 3,
                            FacultyID = 21,
                            GroupName = "КН-318в"
                        });
                });

            modelBuilder.Entity("KIP_server_GET.Models.News", b =>
                {
                    b.Property<int>("NewsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int>("FacultyID")
                        .HasColumnType("integer");

                    b.Property<string>("NewsText")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.HasKey("NewsID");

                    b.HasIndex("FacultyID");

                    b.ToTable("News");

                    b.HasData(
                        new
                        {
                            NewsID = 12022021,
                            FacultyID = 20,
                            NewsText = "Увага! Студентам Ківа Владислав КН-419а та Шабаш Ігор КН-320г для вирішення питань отримання стипендії необхідно терміново звернуться до центрального відділення Приватбанку м. Харків"
                        },
                        new
                        {
                            NewsID = 3032021,
                            FacultyID = 21,
                            NewsText = "Студенти Моя Кордова, Савчук, Лобода, Надуэва, Петросов, Поцелуєв можуть отримати  е-тікет у вівторок."
                        },
                        new
                        {
                            NewsID = 28012021,
                            FacultyID = 42,
                            NewsText = "Шановні студенти контрактники. Нагадуємо вам, що відповідно до пунктів ваших контрактів вам необхідно сплатити за навчання протягом 10 днів після початку семестру."
                        });
                });

            modelBuilder.Entity("KIP_server_GET.Models.Plan", b =>
                {
                    b.Property<int>("PlanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("PlanText")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("StudentID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("PlanID");

                    b.HasIndex("StudentID");

                    b.ToTable("Plan");

                    b.HasData(
                        new
                        {
                            PlanID = 123,
                            PlanText = "Забрать флюрографию",
                            StudentID = 18065,
                            Time = new DateTime(2020, 4, 12, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PlanID = 122,
                            PlanText = "Контрольная по ТВ",
                            StudentID = 17985,
                            Time = new DateTime(2020, 4, 13, 14, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PlanID = 121,
                            PlanText = "Встреча с куратором",
                            StudentID = 18112,
                            Time = new DateTime(2020, 4, 15, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("KIP_server_GET.Models.Prof", b =>
                {
                    b.Property<int>("ProfID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int>("CathedraID")
                        .HasColumnType("integer");

                    b.Property<string>("ProfName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ProfPatronymic")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ProfSurname")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("ProfID");

                    b.HasIndex("CathedraID");

                    b.ToTable("Prof");

                    b.HasData(
                        new
                        {
                            ProfID = 643,
                            CathedraID = 194,
                            ProfName = "Галкін",
                            ProfPatronymic = "Олександрович",
                            ProfSurname = "Сергій"
                        },
                        new
                        {
                            ProfID = 12614,
                            CathedraID = 194,
                            ProfName = "Тарасенко",
                            ProfPatronymic = "Анатоліївна",
                            ProfSurname = "Ірина"
                        },
                        new
                        {
                            ProfID = 1277,
                            CathedraID = 76,
                            ProfName = "Шабанова-Кушнаренко",
                            ProfPatronymic = "Володимирівна",
                            ProfSurname = "Любов"
                        });
                });

            modelBuilder.Entity("KIP_server_GET.Models.ProfSchedule", b =>
                {
                    b.Property<int>("ProfScheduleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int>("AudienceID")
                        .HasColumnType("integer");

                    b.Property<int>("BuildingID")
                        .HasColumnType("integer");

                    b.Property<int>("ProfID")
                        .HasColumnType("integer");

                    b.Property<int>("SubjectID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Week")
                        .HasColumnType("boolean");

                    b.HasKey("ProfScheduleID");

                    b.HasIndex("AudienceID");

                    b.HasIndex("BuildingID");

                    b.HasIndex("ProfID");

                    b.HasIndex("SubjectID");

                    b.ToTable("ProfSchedule");

                    b.HasData(
                        new
                        {
                            ProfScheduleID = 123,
                            AudienceID = 1534,
                            BuildingID = 7,
                            ProfID = 643,
                            SubjectID = 358,
                            Time = new DateTime(2020, 2, 24, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Week = true
                        },
                        new
                        {
                            ProfScheduleID = 122,
                            AudienceID = 1510,
                            BuildingID = 3,
                            ProfID = 12614,
                            SubjectID = 114,
                            Time = new DateTime(2020, 2, 24, 10, 25, 0, 0, DateTimeKind.Unspecified),
                            Week = true
                        },
                        new
                        {
                            ProfScheduleID = 121,
                            AudienceID = 1684,
                            BuildingID = 13,
                            ProfID = 1277,
                            SubjectID = 77,
                            Time = new DateTime(2020, 2, 24, 12, 35, 0, 0, DateTimeKind.Unspecified),
                            Week = false
                        });
                });

            modelBuilder.Entity("KIP_server_GET.Models.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int>("GroupID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StudentBDay")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StudentPatronymic")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StudentSurname")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("StudentID");

                    b.HasIndex("GroupID");

                    b.ToTable("Student");

                    b.HasData(
                        new
                        {
                            StudentID = 18065,
                            GroupID = 11114,
                            StudentBDay = new DateTime(2000, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentName = "Безчастний",
                            StudentPatronymic = "Максимович",
                            StudentSurname = "Олексій"
                        },
                        new
                        {
                            StudentID = 17985,
                            GroupID = 11114,
                            StudentBDay = new DateTime(2001, 9, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentName = "Ковальов",
                            StudentPatronymic = "Олексійович",
                            StudentSurname = "Дмитро"
                        },
                        new
                        {
                            StudentID = 18112,
                            GroupID = 11114,
                            StudentBDay = new DateTime(2001, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentName = "Жадан",
                            StudentPatronymic = "Олександрович",
                            StudentSurname = "Артем"
                        });
                });

            modelBuilder.Entity("KIP_server_GET.Models.StudentSchedule", b =>
                {
                    b.Property<int>("StudentScheduleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int>("AudienceID")
                        .HasColumnType("integer");

                    b.Property<int>("BuildingID")
                        .HasColumnType("integer");

                    b.Property<int>("GroupID")
                        .HasColumnType("integer");

                    b.Property<int>("SubjectID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Week")
                        .HasColumnType("boolean");

                    b.HasKey("StudentScheduleID");

                    b.HasIndex("AudienceID");

                    b.HasIndex("BuildingID");

                    b.HasIndex("GroupID");

                    b.HasIndex("SubjectID");

                    b.ToTable("StudentSchedule");

                    b.HasData(
                        new
                        {
                            StudentScheduleID = 123,
                            AudienceID = 1534,
                            BuildingID = 13,
                            GroupID = 12619,
                            SubjectID = 358,
                            Time = new DateTime(2020, 2, 25, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Week = false
                        },
                        new
                        {
                            StudentScheduleID = 122,
                            AudienceID = 1510,
                            BuildingID = 7,
                            GroupID = 12194,
                            SubjectID = 114,
                            Time = new DateTime(2020, 2, 25, 10, 25, 0, 0, DateTimeKind.Unspecified),
                            Week = true
                        },
                        new
                        {
                            StudentScheduleID = 121,
                            AudienceID = 1684,
                            BuildingID = 3,
                            GroupID = 11114,
                            SubjectID = 77,
                            Time = new DateTime(2020, 2, 25, 12, 35, 0, 0, DateTimeKind.Unspecified),
                            Week = false
                        });
                });

            modelBuilder.Entity("KIP_server_GET.Models.Subject", b =>
                {
                    b.Property<int>("SubjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int>("CathedraID")
                        .HasColumnType("integer");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("SubjectID");

                    b.HasIndex("CathedraID");

                    b.ToTable("Subject");

                    b.HasData(
                        new
                        {
                            SubjectID = 358,
                            CathedraID = 194,
                            SubjectName = "Теорія управління"
                        },
                        new
                        {
                            SubjectID = 114,
                            CathedraID = 76,
                            SubjectName = "Аналіз даних"
                        },
                        new
                        {
                            SubjectID = 77,
                            CathedraID = 76,
                            SubjectName = "Фізичне виховання"
                        });
                });

            modelBuilder.Entity("KIP_server_GET.Models.Audience", b =>
                {
                    b.HasOne("KIP_server_GET.Models.Building", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("KIP_server_GET.Models.Auth", b =>
                {
                    b.HasOne("KIP_server_GET.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("KIP_server_GET.Models.Cathedra", b =>
                {
                    b.HasOne("KIP_server_GET.Models.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("KIP_server_GET.Models.Group", b =>
                {
                    b.HasOne("KIP_server_GET.Models.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("KIP_server_GET.Models.News", b =>
                {
                    b.HasOne("KIP_server_GET.Models.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("KIP_server_GET.Models.Plan", b =>
                {
                    b.HasOne("KIP_server_GET.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("KIP_server_GET.Models.Prof", b =>
                {
                    b.HasOne("KIP_server_GET.Models.Cathedra", "Cathedra")
                        .WithMany()
                        .HasForeignKey("CathedraID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cathedra");
                });

            modelBuilder.Entity("KIP_server_GET.Models.ProfSchedule", b =>
                {
                    b.HasOne("KIP_server_GET.Models.Audience", "Audience")
                        .WithMany()
                        .HasForeignKey("AudienceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KIP_server_GET.Models.Building", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KIP_server_GET.Models.Prof", "Prof")
                        .WithMany()
                        .HasForeignKey("ProfID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KIP_server_GET.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Audience");

                    b.Navigation("Building");

                    b.Navigation("Prof");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("KIP_server_GET.Models.Student", b =>
                {
                    b.HasOne("KIP_server_GET.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("KIP_server_GET.Models.StudentSchedule", b =>
                {
                    b.HasOne("KIP_server_GET.Models.Audience", "Audience")
                        .WithMany()
                        .HasForeignKey("AudienceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KIP_server_GET.Models.Building", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KIP_server_GET.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KIP_server_GET.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Audience");

                    b.Navigation("Building");

                    b.Navigation("Group");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("KIP_server_GET.Models.Subject", b =>
                {
                    b.HasOne("KIP_server_GET.Models.Cathedra", "Cathedra")
                        .WithMany()
                        .HasForeignKey("CathedraID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cathedra");
                });
#pragma warning restore 612, 618
        }
    }
}
